// Code generated by protoc-gen-go-kit-grpc.

package test

import (
	"context"
	kitlog "github.com/go-kit/log"
	"log"
	"os"
	"testing"
)

func TestWallet_Insert(t *testing.T) {

	var logger kitlog.Logger
	logger = kitlog.NewJSONLogger(os.Stdout)
	logger = kitlog.With(logger, "ts", kitlog.DefaultTimestampUTC)
	logger = kitlog.With(logger, "caller", kitlog.DefaultCaller)

	client := NewWalletClientImpl(logger)
	rsp, err := client.Insert(context.TODO(), &InsertRequest{
		Item: &Item{
			UserId: new(string),
			Id:     "string",
			Val:    new(TestEnum),
			Val2:   TestEnum_UNIVERSAL,
		},
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_Delete(t *testing.T) {

	var logger kitlog.Logger
	logger = kitlog.NewJSONLogger(os.Stdout)
	logger = kitlog.With(logger, "ts", kitlog.DefaultTimestampUTC)
	logger = kitlog.With(logger, "caller", kitlog.DefaultCaller)

	client := NewWalletClientImpl(logger)
	rsp, err := client.Delete(context.TODO(), &DeleteRequest{
		Id:     []string{},
		Corpus: DeleteRequest_UNIVERSAL,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_ClientStream(t *testing.T) {

	var logger kitlog.Logger
	logger = kitlog.NewJSONLogger(os.Stdout)
	logger = kitlog.With(logger, "ts", kitlog.DefaultTimestampUTC)
	logger = kitlog.With(logger, "caller", kitlog.DefaultCaller)

	client := NewWalletClientImpl(logger)
	rsp, err := client.ClientStream(context.TODO(), &ClientStreamRequest{
		Stroke: 0,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_ServerStream(t *testing.T) {

	var logger kitlog.Logger
	logger = kitlog.NewJSONLogger(os.Stdout)
	logger = kitlog.With(logger, "ts", kitlog.DefaultTimestampUTC)
	logger = kitlog.With(logger, "caller", kitlog.DefaultCaller)

	client := NewWalletClientImpl(logger)
	rsp, err := client.ServerStream(context.TODO(), &ServerStreamRequest{
		Count: 0,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_BidiStream(t *testing.T) {

	var logger kitlog.Logger
	logger = kitlog.NewJSONLogger(os.Stdout)
	logger = kitlog.With(logger, "ts", kitlog.DefaultTimestampUTC)
	logger = kitlog.With(logger, "caller", kitlog.DefaultCaller)

	client := NewWalletClientImpl(logger)
	rsp, err := client.BidiStream(context.TODO(), &BidiStreamRequest{
		Stroke: 0,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
